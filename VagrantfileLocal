# psi-turkey vm, testing
# poldracklab

VAGRANTFILE_API_VERSION = "2"

$script = <<SCRIPT

if [ ! -d $HOME/miniconda ]
then
 # install anaconda
 wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86.sh
 chmod +x Miniconda-latest-Linux-x86.sh
 ./Miniconda-latest-Linux-x86.sh -b
 echo "export PATH=$HOME/miniconda/bin:\\$PATH" >> .bashrc
 echo "export PATH=$HOME/miniconda/bin:\\$PATH" >> .env
fi

# install python packages
$HOME/miniconda/bin/conda update --yes conda
$HOME/miniconda/bin/pip install setuptools
$HOME/miniconda/bin/conda install --yes pip numpy scipy nose traits networkx
$HOME/miniconda/bin/conda install --yes pandas

sudo apt-get update > /dev/null
sudo apt-get install -y --force-yes git 
sudo apt-get install -y --force-yes build-essential
sudo apt-get install -y --force-yes nginx

# Install psiturk
sudo apt-get install -y --force-yes libreadline6 libreadline6-dev
sudo apt-get install -y --force-yes libncurses-dev
$HOME/miniconda/bin/pip install python-Levenshtein
$HOME/miniconda/bin/pip install git+git://github.com/NYUCCL/psiTurk.git@master

# Install postgresql
sudo apt-get install -y --force-yes postgresql postgresql-contrib
sudo apt-get install -y --force-yes pgadmin3
sudo apt-get install -y --force-yes libpq-dev

# Install MySQL
sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password psiturkvm'
sudo apt-get install -y --force-yes mysql-server

sudo /etc/init.d/nginx start

# Download experiments and battery repos
if [ ! -d $HOME/psiturk-build/battery ]
then
  git clone https://github.com/psiturk/psiturk-battery.git $HOME/psiturk-build/battery
fi

if [ ! -d $HOME/psiturk-build/experiments ]
then
  git clone https://github.com/psiturk/psiturk-experiments.git $HOME/psiturk-build/experiments
fi

if [ ! -d $HOME/psiturk-build/psiturk-python ]
then
  git clone https://github.com/psiturk/psiturk-python.git $HOME/psiturk-build/psiturk-python
  cd $HOME/psiturk-build/psiturk-python
  $HOME/miniconda/bin/pip install -r requirements.txt  
  $HOME/miniconda/bin/python setup.py install
fi

if [ ! -d $HOME/psiturk-build/psiturk-vm ]
then
  git clone https://github.com/psiturk/psiturk-vm.git $HOME/psiturk-build/psiturk-vm
fi

# Make directory for battery
mkdir -p $HOME/psiturk-battery

CUSTOM_INSTALL="False"

if [[ $CUSTOM_INSTALL == "False" ]] ; then
    # Create and run script for all valid experiments
    chmod u+x $HOME/psiturk-build/psiturk-vm/script/standard_setup_battery.py 
    ./$HOME/psiturk-build/psiturk-vm/script/standard_setup_battery.py

else

    if ! [ -f $HOME/psiturk-build/psiturk-vm/script/custom_setup_battery.py ]; then
        echo """#!/usr/bin/python
               from psiturkpy.battery import generate
               import sys
               battery_repo = sys.argv[1]
               experiment_repo = sys.argv[2]
               battery_dest = sys.argv[3]
               experiments = [[SUB_PSITURKBATTERY_SUB]]
               generate(battery_repo,battery_dest,experiment_repo,experiments=experiments)        
        """ >/tmp/aijfaef
        sudo cp /tmp/aijfaef $HOME/psiturk-build/psiturk-vm/script/custom_setup_battery.py
    fi
    chmod u+x $HOME/psiturk-build/psiturk-vm/script/custom_setup_battery.py
    ./$HOME/psiturk-build/psiturk-vm/script/custom_setup_battery.py

fi 

SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define :engine do |engine_config|
    engine_config.vm.box = "ubuntu12.04-x86"
    engine_config.vm.box_url = "http://files.vagrantup.com/precise32.box"

    engine_config.vm.network :private_network, ip: "192.128.0.20"
    engine_config.vm.hostname = 'psiturk-battery'

    engine_config.vm.provision "shell", :privileged => false, inline: $script
  end
end
